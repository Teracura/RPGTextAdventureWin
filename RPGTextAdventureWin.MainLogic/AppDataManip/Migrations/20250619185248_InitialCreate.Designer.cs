// <auto-generated />
using MainLogic.AppDataManip;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MainLogic.AppDataManip.Migrations
{
    [DbContext(typeof(AppDataDbContext))]
    [Migration("20250619185248_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("RPGTextAdventureWin.UI.Entities.Heroes.HeroBaseEntity", b =>
                {
                    b.Property<int>("SaveSlot")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("DefencePercentage")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DefenseIncreasePerLevel")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Dmg")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DmgPerLevel")
                        .HasColumnType("TEXT");

                    b.Property<string>("HeroType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Hp")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HpPerLevel")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MaxDefense")
                        .HasColumnType("TEXT");

                    b.Property<int>("Money")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Mp")
                        .HasColumnType("TEXT");

                    b.Property<int>("TurnCounter")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Xp")
                        .HasColumnType("TEXT");

                    b.HasKey("SaveSlot");

                    b.ToTable("Heroes");

                    b.HasDiscriminator<string>("HeroType").HasValue("HeroBaseEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("RPGTextAdventureWin.UI.MainLogic.GlobalParameters.BaseEntities.GameStateParametersBaseEntity", b =>
                {
                    b.Property<int>("SaveSlot")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DungeonCleared")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EnemyDefeated")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GlobalDungeonsCleared")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GlobalEnemiesKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GlobalTimesDefeated")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDefeated")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("KaitoKeyEffect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfEnemiesDefeated")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfEnemiesPerDungeon")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Saving")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ScaleFactor")
                        .HasColumnType("TEXT");

                    b.HasKey("SaveSlot");

                    b.ToTable("GameStateParameters");
                });

            modelBuilder.Entity("RPGTextAdventureWin.UI.Entities.Heroes.ArcherEntity", b =>
                {
                    b.HasBaseType("RPGTextAdventureWin.UI.Entities.Heroes.HeroBaseEntity");

                    b.HasDiscriminator().HasValue("Archer");
                });

            modelBuilder.Entity("RPGTextAdventureWin.UI.Entities.Heroes.MageEntity", b =>
                {
                    b.HasBaseType("RPGTextAdventureWin.UI.Entities.Heroes.HeroBaseEntity");

                    b.HasDiscriminator().HasValue("Mage");
                });

            modelBuilder.Entity("RPGTextAdventureWin.UI.Entities.Heroes.WarriorEntity", b =>
                {
                    b.HasBaseType("RPGTextAdventureWin.UI.Entities.Heroes.HeroBaseEntity");

                    b.HasDiscriminator().HasValue("Warrior");
                });
#pragma warning restore 612, 618
        }
    }
}
